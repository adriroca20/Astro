---
import Code from "src/icons/Code2.astro";
import Tailwind from "../icons/Tailwind.astro"
import JavaScript from "src/icons/JavaScript.astro";
import TypeScript from "src/icons/TypeScript.astro"
import CSS from "src/icons/CSS.astro"
import AstroIcon from "src/icons/AstroIcon.astro";
import Zustand from "src/icons/Zustand.astro"
import MainProjectItem from "./MainProjectItem.astro";
import React from "src/icons/React.astro";
import Vitest from "src/icons/Vitest.astro";
import Angular from "src/icons/Angular.astro";
import NET from "src/icons/NET.astro";
import SQL from "src/icons/SQL.astro";
import Azure from "src/icons/Azure.astro";
import Django from "src/icons/Django.astro";
import Jest from "src/icons/Jest.astro";
import Playwright from "src/icons/Playwright.astro";
const TAGS = {
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
  JS: {
    name: "JavaScript",
    class: "bg-[#f0db4f66] text-white",
    icon: JavaScript,
  },
  CSS: {
    name: "CSS",
    class: "bg-[#30a9dc66] text-white",
    icon: CSS,
  },
  TS: {
    name: "TypeScript",
    class: "bg-[#3178c64d] text-white",
    icon: TypeScript,
  },
  ASTRO: {
    name: "Astro",
    class: "bg-[#FFFFFF66] text-white",
    icon: AstroIcon,
  },
  REACT: {
    name: "React",
    class: "bg-[#00D8FF66] text-white",
    icon: React,
  },
  ZUSTAND: {
    name: "Zustand",
    class: "bg-[#70625766] text-white",
    icon: Zustand,
  },
  VITEST: {
    name: "Vitest",
    class: "bg-[#FCC72B66] text-white",
    icon: Vitest,
  },
  ANGULAR:{
    name: "Angular",
    class: "bg-[#dd003166] text-white",
    icon: Angular,
  },
  NET:{
    name: ".Net",
    class: "bg-[#a179dc66] text-white",
    icon: NET,
  },
  SQL:{
    name: "Microsoft SQL Server",
    class: "bg-[#cfd8dc66] text-white",
    icon: SQL,
  },
  AZURE:{
    name: "Microsoft Azure",
    class: "bg-[#114a8b66] text-white",
    icon: Azure,
  },
  DJANGO:{
    name: "Django REST framework",
    class: "bg-[#44b78b66] text-white",
    icon: Django,
  },
  JEST:{
    name: "Jest",
    class: "bg-[#99425B66] text-white",
    icon: Jest,
  },
  PLAYWRIGHT:{
    name: "Playwright",
    class: "bg-[#44b78b66] text-white",
    icon: Playwright,
  },
}
const PROJECTS = [
  {
    title: "Javascript Quizz - A beautiful quizz about javascript",
    description:
      `Javascript quiz developed with react, typescript and zustand as state manager for the application. It allows you to customize the quiz and download a dinamycally generated image with the result of the test.`,
    link: "https://javascript-quizz-one.vercel.app/",
    github: "https://github.com/adriroca20/JavascriptQuizz",
    tags: [TAGS.TS, TAGS.CSS, TAGS.REACT, TAGS.ZUSTAND, TAGS.VITEST],
    images: ["/JSQuiz1.webp", "/JSQuiz2.webp", "/JSQuiz3.webp"]
  },
  {
    title: "Tailwind CSS Animations - +70 CSS animations added to Tailwind CSS classes",
    description:
      "Plugin and website for tailwind CSS animations. Created more than 70 animations, tested with vitest and published in NPM. Then, I built a website to easily show and copy with one click all the classes added in this plugin.",
    link: "https://tailwind-animations-eight.vercel.app/",
    github:"https://github.com/adriroca20/Astro/tree/main/tailwind-animations",
    tags: [TAGS.TAILWIND, TAGS.ASTRO, TAGS.VITEST],
    images: ["/TailwindAnimations1.webp", "/TailwindAnimations2.webp"]
  },
  {
    title: "Envoy2 & Tracker",
    description:`
      Envoy2 & Tracker are two applications created to track and manage the multiple movements of a big power company. Developed with
      Angular and NGRX as state manager for the frontend and .Net on the backend. 
    `,
    tags: [TAGS.ANGULAR, TAGS.CSS, TAGS.NET, TAGS.SQL, TAGS.AZURE, TAGS.JEST, TAGS.PLAYWRIGHT],
    images: ["/Tracker1.webp", "/Tracker2.webp", "/Tracker3.webp","/Tracker4.webp"]
  },
  {
    title: "Twitter spaces transcriptor - Transcript your online calls",
    description:
    `Web application developed with Angular, tailwind and Django REST framework. Just by copying and pasting the Twitter spaces link, you 
    will get the transcription according to the parameters that were chosen by the user.`,
    github: "https://github.com/adriroca20/Astro/tree/main/free-screen-recorder",
    tags: [TAGS.ANGULAR, TAGS.TAILWIND, TAGS.DJANGO],
    images: ["/TTranscriptor1.webp", "/TTranscriptor2.webp"]
  },
]
---
<header id="mainProjects" class="flex content-start items-end gap-2 mb-8">
    <Code></Code>
   <h1 class="text-2xl font-bold">Main projects</h1>
</header>

<section id="mainProjects" class="flex flex-col gap-y-16 mb-14">
  {
    PROJECTS.map((project) => (
       <MainProjectItem projectItemData={project}>
        </MainProjectItem> 
    ))
  }
</section>